#!/usr/bin/env perl

use Gedcom;
use Getopt::Long qw(:config bundling pass_through);
use Pod::Usage;
use Term::Prompt;

our ($Ans,$Debug,$Help,$Verbose);

# Process commandline arguments.
GetOptions (
	'd|debug+' => sub { $Debug++; $Verbose++; },
	'h|help' => \$Help,
	'n|no' => sub { $Ans = 'n'; },
	'v|verbose+' => \$Verbose,
	'y|yes' => sub { $Ans = 'y'; }
) or pod2usage();

pod2usage() if $Help;

my $GedFile1 = $ARGV[0] and -f ($ARGV[0]) or die "You must specify at least 2 GEDCOM files to process.\n";
my $GedFile2 = $ARGV[1] and -f ($ARGV[1]) or die "You must specify at least 2 GEDCOM files to process.\n";

my $Gedcom1 = Gedcom->new($GedFile1);
my $Gedcom2 = Gedcom->new($GedFile2);
my $Gedcom3 = $Gedcom1;

foreach $Ind ($Gedcom2->individuals()) {
	@Matches = $Gedcom3->get_individual($Ind->name);
	if (@Matches) {
		foreach $Match (@Matches) {
			unless ($Ans) {
				print "Merge: ". $Ind->name . " --> ". $Match->name ." ?\n";
				my $Merge = &prompt('y','>','y/n','n');
				if ($Merge) { }
			} else {
				if ($Ans eq 'y') {
				}
			}
		}
	} else {
		print "Adding ". $Ind->name . "\n";
		$NewInd = $Gedcom3->add_individual;
		print "Created new individual record ". $NewInd->{xref} .".\n";
		$NewInd = $Ind;
		if ($Debug) { print $NewInd->{xref} ." = ". $Ind->{xref} ."\n"; }
	}
}

$Gedcom3->write(
